piece base, body, reflect, pass;

#include "exptype.h"

static-var lasered, aimOffset;

Align(h) {
	var ah;
	ah=(aimOffset - h);
	if (ah > [.5]) ah = ah - [1];
	if (ah < [-.5]) ah = ah + [1];
	set HEADING to h + ah/2;
}

Guide() {
	if (lasered || get BUILD_PERCENT_LEFT) return;
	lasered=1;
	emit-sfx 2048 from reflect;
	emit-sfx 2048 from pass;
	sleep 200;
	lasered=0;
}

ForwardLaser(red, h) {
	var ah;
	ah = h - get HEADING;
	if (ah > [.5]) ah = ah - [1];
	if (ah < [-.5]) ah = ah + [1];
	if (ah > [-.25] && ah < [.25]) {
		turn reflect to y-axis 0 - ah now;
		turn pass to y-axis <180> + ah now;
		emit-sfx 2049 from reflect;
		emit-sfx 2049 from pass;
		red=75;
		//play-sound ("BeamBounce",5);
	}
}

AimLaser(h) {
	aimOffset = h;
	var ah;
	ah = h - get HEADING;
	if (ah > [.5]) ah = ah - [1];
	if (ah < [-.5]) ah = ah + [1];
	if (ah > [-.25] && ah < [.25]) {
		turn reflect to y-axis 0 - ah now;
		turn pass to y-axis <180> + ah now;
		start-script Guide();
	}
}

Killed() {
	sleep 3000;
	return 3;
}